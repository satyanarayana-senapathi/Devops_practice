pipeline {
    agent any

    tools {
        // This 'maven' corresponds to the name of the Maven installation in Jenkins' Global Tool Configuration.
        maven 'maven-3'
    }


    environment {
        // Use your GHCR repository name
        DOCKER_IMAGE = 'ghcr.io/satyanarayana-senapathi/jenkins-test:latest'
    }

    stages {
        stage('Build with Maven') {
            steps {
                script {
                    sh 'mvn clean install -f ./spring-boot-assignment'
                    sh 'sudo docker --version'
                }
            }
        }
        
        stage('Build Docker image') {
            steps {
                script {
                    sh "sudo docker build -t ${DOCKER_IMAGE} -f ./spring-boot-assignment/Dockerfile ./spring-boot-assignment"
                }
            }
        }
        stage('GHCR Login ') {
            steps {
                // Use the withCredentials step to bind the secret to an environment variable
                withCredentials([string(credentialsId: 'GHCR-TOKEN-ID', variable: 'GHCR_TOKEN')]) {
                    sh """
                       echo $GHCR_TOKEN | sudo docker login ghcr.io -u satyanarayana-senapathi --password-stdin
                    """
                }
            }
        }
        
        stage('Push to GHCR') {
            steps {
                script {
                    // Push the Docker image
                    sh "sudo docker push ${DOCKER_IMAGE}"
                }
            }
        }
    }
}
