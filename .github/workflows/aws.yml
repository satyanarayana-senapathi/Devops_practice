name: Deploy to AWS EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ec2-13-233-116-175.ap-south-1.compute.amazonaws.com >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      
      - name: SSH into EC2
        run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@ec2-13-233-116-175.ap-south-1.compute.amazonaws.com
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 14
      
#       - name: Login to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           push: true
#           tags: satyanarayanasvv/react-app:${{ github.sha }}
#           dockerfile: Dockerfile

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
# #           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.EC2_PRIVATE_KEY }}
#           aws-region: ap-south-1
#       - name : create private key file
#         run: |
#           pwd
#           touch key.pem
#           ls -al
#           echo ${{ secrets.EC2_PRIVATE_KEY }} > key.pem
#           ls
#           chmod 400 key.pem
        
#       - name: SSH into EC2 instance and pull Docker image
#         run: |
#             ssh -o StrictHostKeyChecking=no -i '${{ secrets.EC2_PRIVATE_KEY }}' ubuntu@ec2-13-233-116-175.ap-south-1.compute.amazonaws.com            
#             sudo apt install nginx -y
      
